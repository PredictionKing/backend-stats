{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/organization/organization.component.ts","webpack:///src/app/organization/organization.component.html","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/stats.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","statsService","results","selectedValues","suggestions","console","log","flex","currentAccount","solo","setAccount","msgs","push","severity","summary","detail","ingame","updateApiKey","riotKey","subscribe","selected","account","suggestionAccounts","find","accountID","event","query","toLowerCase","getAccounts","data","map","onSelect","filterAccountSingle","saveSetting","updateKey","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","title","appRoutes","path","component","redirectTo","pathMatch","AppModule","enableTracing","declarations","providers","bootstrap","DashboardComponent","visible","playername","responsiveOptions","breakpoint","numVisible","numScroll","Ingame","updateTable","getStats","stats","getPlayerStats","playerstats","cols","field","header","MainComponent","MenuComponent","display","OrganizationComponent","team","teamMember","getTeam","label","type","styleClass","name","expanded","children","position","styles","SearchComponent","StatsService","http","get","toPromise","res","params","append","key","post","player","put","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {Account, StatsService} from '../stats.service';\nimport { BehaviorSubject, pipe, Subscriber, Subscribable, Subscription } from 'rxjs';\nimport { tap, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private statsService: StatsService) { }\n\n  account: any;\n  accounts: any[];\n  filteredAccount: any[];\n  results = [];\n  selectedValues: string[] = [];\n  availableAccounts: string[];\n  suggestions: string[] = [];\n  accountID: Number;\n  flex:boolean;\n  solo:boolean;\n  suggestionAccounts: Account[];\n  currentAccount: Account;\n  msgs;\n  riotKey;\n\n  ngOnInit(): void {\n\n  }\n\n  saveSetting(){\n    console.log(\"executed\")\n    console.log(this.flex)\n    this.currentAccount.flex = this.flex;\n    this.currentAccount.solo = this.solo;\n    console.log(this.currentAccount)\n    this.statsService.setAccount(this.currentAccount);\n    this.msgs = [];\n    this.msgs.push({severity:'success', summary:'Saved', detail:'Saved settings for ' + this.currentAccount.ingame });\n  }\n\n  updateKey(){\n    this.statsService.updateApiKey(this.riotKey).subscribe();\n  }\n\n\n  onSelect(selected: string){\n    let account = this.suggestionAccounts.find((e) => e.ingame===selected);\n    this.currentAccount = account;\n    this.flex = account.flex;\n    this.solo = account.solo;\n    this.accountID = account.accountID;\n  }\n\n  filterAccountSingle(event) {\n    const query = event.query.toLowerCase();\n    this.statsService.getAccounts(query).subscribe(data => {\n      this.suggestions = data.map((e)=> e.ingame)\n      this.suggestionAccounts = data\n    });\n  }\n\n}\n","<p-panel header=\"Refresh\" [toggleable]=\"true\">\n    <div class=\"ui-inputgroup\">\n      <div class=\"ui-g-12 ui-md-4\">\n        <span class=\"ui-inputgroup-addon\"><i class=\"pi pi-user\" style=\"line-height: 0;\"></i></span>\n        <p-autoComplete [(ngModel)]=\"account\" [dropdown]=\"true\" (onSelect)=\"onSelect($event)\" [suggestions]=\"suggestions\" (completeMethod)=\"filterAccountSingle($event)\" [forceSelection]=\"true\" [autoHighlight]=\"true\"></p-autoComplete>\n        <div class=\"ui-g-12\"><p-checkbox name=\"group1\" [binary]=\"true\" label=\"Flex\" [(ngModel)]=\"flex\" inputId=\"flex\"></p-checkbox></div>\n        <div class=\"ui-g-12\"><p-checkbox name=\"group1\" [binary]=\"true\" label=\"Solo\" [(ngModel)]=\"solo\" inputId=\"solo\"></p-checkbox></div>\n        <div class=\"ui-g-12\"><p-button label=\"Save\" (click)=\"saveSetting()\" ></p-button></div>\n        <div class=\"ui-g-12\"><p-messages [(value)]=\"msgs\" [hideTransitionOptions]=\"'300ms'\" ></p-messages></div>\n      </div>\n    </div>\n</p-panel>\n<p-panel header=\"Settings\" [toggleable]=\"true\">\n      <input id=\"input\" type=\"text\" size=\"30\" placeholder=\"Riot-API Key\" pInputText [(ngModel)]=\"riotKey\">\n      <p-button label=\"Save\" (click)=\"updateKey()\" style=\"margin-left: 15px;\" ></p-button>\n</p-panel>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-menu></app-menu>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {SidebarModule} from 'primeng/sidebar';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {ButtonModule} from 'primeng/button';\nimport {ToolbarModule} from 'primeng/toolbar';\nimport { RouterModule, Routes } from '@angular/router';\nimport {OrganizationChartModule} from 'primeng/organizationchart';\nimport {TreeNode} from 'primeng/api';\nimport {TableModule} from 'primeng/table';\nimport { StatsService } from './stats.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport {CarouselModule} from 'primeng/carousel';\nimport {Panel, PanelModule} from 'primeng/panel';\nimport {AutoCompleteModule} from 'primeng/autocomplete';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport { FormsModule }    from '@angular/forms';\nimport {MessagesModule} from 'primeng/messages';\nimport {MessageModule} from 'primeng/message';\nimport {DataViewModule} from 'primeng/dataview';\nimport {InputTextModule} from 'primeng/inputtext';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MenuComponent } from './menu/menu.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { OrganizationComponent } from './organization/organization.component';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport { AdminComponent } from './admin/admin.component';\nimport { MainComponent } from './main/main.component';\nimport { SearchComponent } from './search/search.component';\n\n\nconst appRoutes: Routes = [\n  { path: 'search', component: SearchComponent },\n  { path: 'main', component: MainComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'organization', component: OrganizationComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: '',\n    redirectTo: '/main',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    DashboardComponent,\n    OrganizationComponent,\n    AdminComponent,\n    MainComponent,\n    SearchComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    InputTextModule,\n    SidebarModule,\n    FormsModule,\n    MessageModule,\n    MessagesModule,\n    MatToolbarModule,\n    AutoCompleteModule,\n    DataViewModule,\n    ButtonModule,\n    PanelModule,\n    CheckboxModule,\n    ToolbarModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true }\n    ),\n    OrganizationChartModule,\n    TableModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    CarouselModule\n  ],\n  providers: [ StatsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {TreeNode} from 'primeng/api';\nimport { StatsService, PlayerStats } from '../stats.service';\nimport { Stats } from '../dashboard/stats'\nimport {CarouselModule} from 'primeng/carousel';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  visible= false;\n\n  handleClick(Ingame: String) {\n\n    this.visible = !this.visible;\n\n    switch(Ingame) {\n      case \"RB Last3ngineer\": {\n         this.playername = \"last3ngineer\";\n         this.visible = true;\n         break;\n      }\n      case \"RB Pikarin\": {\n        this.playername = \"pikarin\";\n        break;\n      }\n      case \"RB cheter\": {\n      this.playername = \"cheter\";\n      this.visible = true;\n      break;\n      }\n      case \"RB YoRZa\": {\n      this.playername = \"yorza\";\n      break;\n      }\n      case \"RB Kyrielight\": {\n        this.playername = \"kyrielight\";\n        break;\n      }\n      default: {\n         //statements;\n         break;\n      }\n   }\n   this.updateTable();\n  }\n\n  responsiveOptions;\n  constructor(private statsService: StatsService) {\n    this.responsiveOptions = [\n      {\n          breakpoint: '1024px',\n          numVisible: 3,\n          numScroll: 3\n      },\n      {\n          breakpoint: '768px',\n          numVisible: 2,\n          numScroll: 2\n      },\n      {\n          breakpoint: '560px',\n          numVisible: 1,\n          numScroll: 1\n      }\n  ];\n   }\n\n  stats: Stats[];\n\n  playerstats: PlayerStats[];\n\n  playername: String = \"cheter\";\n\n  cols: any[];\n\n  ngOnInit(): void {\n    this.statsService.getStats().then(stats => this.stats = stats);\n\n    this.statsService.getPlayerStats(this.playername).then( playerstats => this.playerstats = playerstats);\n\n    this.cols = [\n      { field: 'timestamp', header: 'Timestamp' },\n      { field: 'Player', header: 'Player' },\n      { field: 'Champion', header: 'Champion' },\n      { field: 'Gegner', header: 'Gegner' },\n      { field: 'Spielseite', header: 'Spielseite' },\n      { field: 'Win', header: 'Win' },\n      { field: 'Gold', header: 'Gold' },\n      { field: 'Kills', header: 'Kills' },\n      { field: 'Deaths', header: 'Deaths' },\n      { field: 'Assists', header: 'Assists' },\n      { field: 'Damage', header: 'Damage' },\n      { field: 'Wards', header: 'Wards' },\n      { field: 'Pinks', header: 'Pinks' },\n      { field: 'Wards_Cleared', header: 'Wards cleared' },\n      { field: 'Vision_Score', header: 'Vision Score' },\n      { field: 'CS', header: 'CS' },\n      { field: 'Game_length', header: 'Game length' },\n      { field: 'Total_kill', header: 'Total kills' },\n      { field: 'Total_death', header: 'Total deaths' },\n      { field: 'Total_damage', header: 'Total damage' },\n      //{ field: 'MatchID', header: 'MatchID' },\n  ];\n  }\n\n\n  updateTable(){\n    this.statsService.getPlayerStats(this.playername).then( playerstats => this.playerstats = playerstats);\n\n    this.cols = [\n      { field: 'timestamp', header: 'Timestamp' },\n      { field: 'Player', header: 'Player' },\n      { field: 'Champion', header: 'Champion' },\n      { field: 'Gegner', header: 'Gegner' },\n      { field: 'Spielseite', header: 'Spielseite' },\n      { field: 'Win', header: 'Win' },\n      { field: 'Gold', header: 'Gold' },\n      { field: 'Kills', header: 'Kills' },\n      { field: 'Deaths', header: 'Deaths' },\n      { field: 'Assists', header: 'Assists' },\n      { field: 'Damage', header: 'Damage' },\n      { field: 'Wards', header: 'Wards' },\n      { field: 'Pinks', header: 'Pinks' },\n      { field: 'Wards_Cleared', header: 'Wards cleared' },\n      { field: 'Vision_Score', header: 'Vision Score' },\n      { field: 'CS', header: 'CS' },\n      { field: 'Game_length', header: 'Game length' },\n      { field: 'Total_kill', header: 'Total kills' },\n      { field: 'Total_death', header: 'Total deaths' },\n      { field: 'Total_damage', header: 'Total damage' },\n      //{ field: 'MatchID', header: 'MatchID' },\n  ];\n  }\n\n}\n\n","<div class=\"carousel-div\">\n    <p-carousel [value]=\"stats\" styleClass=\"custom-carousel\" [numVisible]=\"3\" [numScroll]=\"1\" [circular]=\"true\" [responsiveOptions]=\"responsiveOptions\">\n      <ng-template let-stats pTemplate=\"item\">\n          <div class=\"car-details\">\n              <div class=\"p-grid p-nogutter\">\n                  <div class=\"p-col-12\">\n                      <h2>{{stats['Ingame']}}</h2>\n                      <img src=\"{{stats['Icon']}}\">\n                  </div>\n                  <div class=\"p-col-12 car-data\">\n                    <div class=\"car-title\">{{stats['Position']}}</div>\n                      <div class=\"car-buttons\">\n                          <button pButton type=\"button\" (click)=\"handleClick(stats['Ingame'])\" class=\"ui-button-secondary\" icon=\"pi pi-search\"></button>\n                          <button pButton type=\"button\" class=\"ui-button-secondary\" icon=\"pi pi-star\"></button>\n                          <button pButton type=\"button\" class=\"ui-button-secondary\" icon=\"pi pi-cog\"></button>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </ng-template>\n    </p-carousel>\n</div>\n\n\n<div class=\"wrapper\" [hidden]=\"!visible\">\n  <p-table [value]=\"playerstats\" [hidden]=\"!visible\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th *ngFor=\"let col of cols\">\n                {{col.header}}\n            </th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-playerstats>\n        <tr>\n            <td *ngFor=\"let col of cols\">\n                    {{playerstats[col.field]}}\n            </td>\n        </tr>\n    </ng-template>\n  </p-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"p-grid\">\n  <div class=\"ui-inputgroup\">\n    <div class=\"centered\">\n      <input type=\"text\" pInputText placeholder=\"Name\" size=\"50\">\n      <button pButton type=\"button\" label=\"Search\"></button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {SidebarModule} from 'primeng/sidebar';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  display= false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p-toolbar>\n  <div class=\"ui-toolbar-group-left\">\n    <p-button (click)=\"display = true\" icon=\"pi pi-bars\" styleClass=\"test\"></p-button>\n    <p-button label=\"Home\" routerLink=\"/main\" routerLinkActive=\"active\" styleClass=\"test\"></p-button>\n    <p-button label=\"Dashboard\" routerLink=\"/dashboard\" routerLinkActive=\"active\" styleClass=\"test\"></p-button>\n    <p-button label=\"Organization\" routerLink=\"/organization\" routerLinkActive=\"active\" styleClass=\"test\"></p-button>\n    <p-button label=\"Admin\" routerLink=\"/admin\" routerLinkActive=\"active\" styleClass=\"test\"></p-button>\n  </div>\n</p-toolbar>\n\n\n<router-outlet></router-outlet>\n<p-sidebar [(visible)]=\"display\" [style]=\"{'width':'20em'}\" styleClass=\"sidebarstyle\">\n  <img src=\"../../assets/riftboss_logo.png\" alt=\"riftboss_logo\" class=\"riftbosslogo\">\n</p-sidebar>\n","import { Component, OnInit } from '@angular/core';\nimport {TreeNode} from 'primeng/api';\nimport {Team, StatsService} from '../stats.service';\n\n@Component({\n  selector: 'app-organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.css'],\n  styles: [`\n      .company.ui-organizationchart .ui-organizationchart-node-content.ui-person {\n          padding: 0;\n          border: 0 none;\n      }\n\n      .node-header,.node-content {\n          padding: .5em .7em;\n      }\n\n      .node-header {\n          background-color: #495ebb;\n          color: #ffffff;\n      }\n\n      .node-content {\n          text-align: center;\n          border: 1px solid #495ebb;\n      }\n\n      .node-content img {\n          border-radius: 50%;\n      }\n\n      .department-cfo {\n          background-color: #7247bc;\n          color: #ffffff;\n      }\n\n      .department-coo {\n          background-color: #a534b6;\n          color: #ffffff;\n      }\n\n      .department-cto {\n          background-color: #e9286f;\n          color: #ffffff;\n      }\n\n      .ui-person .ui-node-toggler {\n          color: #495ebb !important;\n      }\n\n      .department-cto .ui-node-toggler {\n          color: #8a0a39 !important;\n      }\n  `]\n})\nexport class OrganizationComponent implements OnInit {\n\n  constructor(private statsService: StatsService) { }\n\n  team: Team[]= [];\n  teamMember: String[] = [];\n  data: TreeNode[];\n  ngOnInit(): void {\n\n    this.statsService.getTeam().subscribe(team => {\n      this.data = [{\n        label: 'Organization',\n        type: 'company',\n        styleClass: 'department-cfo',\n        data: {name:'RiftBoss', 'avatar': 'riftboss_logo.png'},\n        expanded: true,\n        children: [\n            {\n              label: 'CEO',\n                type: 'person',\n                expanded: true,\n                styleClass: 'ui-person',\n                data: {name:'RB Last3ngineer', 'avatar': 'riftboss_logo.png'},\n                children: [{\n                  label: 'Management',\n                  type: 'person',\n                  expanded: true,\n                  styleClass: 'ui-person',\n                  data: {name:'EngineerTrooper', 'avatar': 'riftboss_logo.png'},\n                  children: [\n                      {\n                          label: 'Coach',\n                          type: 'person',\n                          styleClass: 'ui-person',\n                          data: {name:'RB TimeForPay', 'avatar': 'riftboss_logo.png'}\n                      },\n                      {\n                          label: 'Captain',\n                          type: 'person',\n                          expanded: true,\n                          styleClass: 'ui-person',\n                          data: {name:'RB YoRZa', 'avatar': 'riftboss_logo.png'},\n                          children: [\n                            {\n                              label: 'Co-Captain',\n                              type: 'person',\n                              styleClass: 'ui-person',\n                              data: {name:'RB cheter', 'avatar': 'riftboss_logo.png'}\n                            },\n                          ]\n                      },\n                      {\n                        label: 'Programmierer',\n                        type: 'person',\n                        styleClass: 'ui-person',\n                        data: {name:'RB Ares', 'avatar': 'riftboss_logo.png'}\n                      },{\n                        label: 'Team',\n                        type: 'leaf',\n                        expanded: true,\n                        children:[\n                          {\n                            label: 'Top',\n                            type: 'person',\n                            styleClass: 'ui-person',\n                            data: {name: team.find((e) => e.position === \"Top\")?.ingame, 'avatar': 'Top_icon.png'}\n                          },{\n                            label: 'Jungle',\n                            type: 'person',\n                            styleClass: 'ui-person',\n                            data: {name: team.find((e) => e.position === \"Jungle\")?.ingame, 'avatar': 'gr_Jungle.png'}\n                          },\n                          {\n                            label: 'Mid',\n                            type: 'person',\n                            styleClass: 'ui-person',\n                            data: {name: team.find((e) => e.position === \"Mid\")?.ingame, 'avatar': 'Middle_icon.png'}\n                          },{\n                            label: 'ADC',\n                            type: 'person',\n                            styleClass: 'ui-person',\n                            data: {name: team.find((e) => e.position === \"Adc\")?.ingame, 'avatar': 'Bottom_icon.png'}\n                          },\n                          {\n                            label: 'Support',\n                            type: 'person',\n                            styleClass: 'ui-person',\n                            data: {name: team.find((e) => e.position === \"Supp\")?.ingame, 'avatar': 'Support_icon.png'}\n                          }\n                        ]\n                      },\n                  ]\n              }\n\n        ]}]\n    }];\n    }\n    );\n\n  }\n\n}\n","<div class=\"chart\">\n  <p-organizationChart [value]=\"data\"\n    styleClass=\"company\">\n    <ng-template let-node pTemplate=\"company\">\n      <div class=\"node-header ui-corner-top\">{{node.label}}</div>\n      <div class=\"node-content\">\n          <img src=\"../../assets/{{node.data.avatar}}\" width=\"32\" height=\"32\">\n          <div>{{node.data.name}}</div>\n      </div>\n  </ng-template>\n    <ng-template let-node pTemplate=\"person\">\n        <div class=\"node-header ui-corner-top\">{{node.label}}</div>\n        <div class=\"node-content\">\n            <img src=\"../../assets/{{node.data.avatar}}\" width=\"20\" height=\"20\">\n            <div>{{node.data.name}}</div>\n        </div>\n    </ng-template>\n    <ng-template let-node pTemplate=\"department\">\n        {{node.label}}\n    </ng-template>\n  </p-organizationChart>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"p-grid\">\n  <button pButton type=\"button\" label=\"Back\" class=\"ui-button-secondary\" icon=\"pi pi-arrow-circle-left\"></button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n\nexport interface Stats {\n  PlayerID: any;\n  Name: any;\n  Position: any;\n  Ingame: any;\n  Icon: any;\n}\n\nexport interface Account {\n  accountID: Number;\n  ingame: string;\n  flex: boolean;\n  solo: boolean;\n  riot_accountid: string;\n}\n\nexport interface Team {\n  playerid: Number;\n  ingame: string;\n  name: string;\n  position: string;\n}\n\nexport interface PlayerStats{\n  timestamp: any;\n  Player: any;\n  Champion: any;\n  Gegner: any;\n  Spielseite: any;\n  Win: any;\n  Gold: any;\n  Kills: any;\n  Deaths: any;\n  Assists: any;\n  Damage: any;\n  Wards: any;\n  Pinks: any;\n  Wards_Cleared: any;\n  Vision_Score: any;\n  CS: any;\n  Game_length: any;\n  Total_kill: any;\n  Total_death: any;\n  Total_damage: any;\n  MatchID: any;\n}\n\n@Injectable()\nexport class StatsService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getStats(){\n    return this.http.get<any>('assets/players.json')\n    .toPromise()\n    .then(res => <Stats[]> res.data)\n    .then(data => {return data;});\n  }\n\n  getAccounts(query: string): Observable<Account[]>{\n    const params = new HttpParams().append('query', query);\n    return this.http.get<Account[]>('http://localhost:8080/accounts', {params});\n  }\n\n  getTeam(): Observable<Team[]>{\n    return this.http.get<Team[]>('http://localhost:8080/team');\n  }\n\n  updateApiKey(key: String){\n    return this.http.post('http://localhost:8080/key', key);\n  }\n\n  getPlayerStats(player: String){\n    return this.http.get<any>('assets/stats_'+player+'.json')\n    .toPromise()\n    .then(res => <PlayerStats[]> res.data)\n    .then(data => {return data;});\n  }\n\n  setAccount(account: Account){\n    let data = {\n      accountID: account.accountID,\n      flex: account.flex,\n      solo: account.solo\n    }\n    this.http.put(\"http://localhost:8080/accounts\", data).toPromise().then(data =>{\n      console.log(data);    });\n    //console.log(this.http.put(\"http://localhost:8080/accounts\", account, {params}))\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}